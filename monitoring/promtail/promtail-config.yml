server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    timeout: 30s
    backoff_config:
      min_period: 100ms
      max_period: 10s
      max_retries: 10

scrape_configs:
  # Go application logs from files
  - job_name: goauthboiler-files
    static_configs:
      - targets:
          - localhost
        labels:
          job: goauthboiler
          app: auth-api
          environment: production
          __path__: /var/log/app/*.log
    pipeline_stages:
      - match:
          selector: '{job="goauthboiler"}'
          stages:
            - json:
                expressions:
                  level: level
                  msg: msg
                  time: time
                  method: method
                  path: path
                  status: status
                  duration: duration
            - labels:
                level:
                method:
                status:
            - timestamp:
                source: time
                format: RFC3339Nano
            - output:
                source: msg

  # Docker container logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 10s
        filters:
          - name: name
            values: ["goauthboiler", "postgres", "valkey"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: container
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: stream
      - source_labels: ['__meta_docker_container_name']
        target_label: job
        regex: '/(.*)'
        replacement: 'docker-${1}'
    pipeline_stages:
      - match:
          selector: '{container="goauthboiler"}'
          stages:
            - json:
                expressions:
                  level: level
                  msg: msg
                  time: time
                  method: method
                  path: path
                  status: status
            - labels:
                level:
                method:
                status:
            - timestamp:
                source: time
                format: RFC3339Nano
      - match:
          selector: '{container=~"postgres|valkey"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}) (?P<level>\w+):\s+(?P<message>.*)$'
            - labels:
                level:
            - timestamp:
                source: timestamp
                format: '2006-01-02 15:04:05.000'

  # System logs (if needed)
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
      - labels:
          hostname:
          service:
      - timestamp:
          source: timestamp
          format: 'Jan _2 15:04:05'
