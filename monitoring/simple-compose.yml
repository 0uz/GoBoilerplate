version: '3.8'

services:
  # OTEL Collector - Metrics ve traces toplar
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.135.0
    container_name: otel-collector
    restart: unless-stopped
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8889:8889"   # Prometheus metrics
    volumes:
      - ./otel-collector/config.yml:/etc/otelcol-contrib/otel-collector-config.yml
    command: ["--config=/etc/otelcol-contrib/otel-collector-config.yml"]
    networks:
      - monitoring
      - app-network

  # Prometheus - Metrics storage
  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.retention.time=15d"
    networks:
      - monitoring

  # Tempo - Tracing storage
  tempo:
    image: grafana/tempo:2.8.2
    container_name: tempo
    restart: unless-stopped
    ports:
      - "3200:3200"   # Tempo HTTP API
    volumes:
      - ./tempo/config.yml:/etc/tempo/tempo.yml
      - tempo-data:/tmp/tempo
    command: [ "-config.file=/etc/tempo/tempo.yml" ]
    networks:
      - monitoring

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:12.1.1
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
    depends_on:
      - prometheus
      - tempo

networks:
  monitoring:
    driver: bridge
  app-network:
    external: true
    name: goboilerplate_app-network

volumes:
  prometheus-data:
  grafana-data:
  tempo-data: